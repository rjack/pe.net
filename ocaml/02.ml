(* Giacomo Ritucci 00.49 del 11/10/2008 *)

(* Problem 2
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:

          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 * Find the sum of all the even-valued terms in the sequence which do not exceed
 * four million. *)


(* We need only even terms *)
let zero_if_odd n = 
        if n mod 2 = 0 then n else 0;;


(* Fibonacci's *)
let rec fib n =
        if n <= 1 then 1 else fib (n - 1) + fib (n - 2);;


(* Solve the problem in a brute - force fashion *)
let rec sum_even (f : int -> int) (interval : int * int) = 
        let value = zero_if_odd (f (fst interval)) in
                if value >= snd interval then 0
                else value + sum_even f (fst interval + 1, snd interval);;


(* Call the solver *)
let solve_problem max =
        sum_even fib (1, max);;


Printf.printf "%d\n" (solve_problem 4000000);;
